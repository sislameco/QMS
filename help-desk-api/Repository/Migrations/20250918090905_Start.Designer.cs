// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Repository.Db;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(HelpDbContext))]
    [Migration("20250918090905_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Entities.Audit.AuditLogModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ActionType")
                        .HasColumnType("integer");

                    b.Property<int>("ChangedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityName")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLog", "log");
                });

            modelBuilder.Entity("Models.Entities.Audit.UserLoginModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Browser")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<int>("FkUserId")
                        .HasColumnType("integer");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MachineUser")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.ToTable("UserLogins", "log");
                });

            modelBuilder.Entity("Models.Entities.Issue.LeadCustomerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("text");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("text");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProjectAddress")
                        .HasColumnType("text");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId");

                    b.ToTable("LeadCustomer", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.ResolutionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId");

                    b.ToTable("Resolution", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.RootCauseModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId");

                    b.ToTable("RootCause", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketAttachmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKTicketId");

                    b.ToTable("TicketAttachment", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketCommentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CommentText")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("MentionUserIds")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<long>("TicketId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TicketModelId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("TicketModelId");

                    b.ToTable("TicketComment", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketDepartmentMapModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKDepartmentId");

                    b.HasIndex("FKTicketId");

                    b.ToTable("TicketDepartmentMap", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketLeadCustomerMapModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKLeadCustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKLeadCustomerId");

                    b.HasIndex("FKTicketId");

                    b.ToTable("TicketLeadCustomerMap", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketLinkModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("ExternalKey")
                        .HasColumnType("text");

                    b.Property<long>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKTicketId");

                    b.ToTable("TicketLink", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AssignedUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EstimatedTime")
                        .HasColumnType("text");

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKTicketTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<long?>("ResolutionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("RootCauseId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<long>("SubmittedByUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("TicketCategory")
                        .HasColumnType("integer");

                    b.Property<string>("TicketNumber")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId");

                    b.HasIndex("FKTicketTypeId");

                    b.ToTable("Ticket", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketTypeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int>("DefaultPriority")
                        .HasColumnType("integer");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("FKAssignedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKAssignedUserId");

                    b.ToTable("TicketType", "issue");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketWatchListModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKTicketId");

                    b.HasIndex("FKUserId");

                    b.ToTable("TicketWatchList", "issue");
                });

            modelBuilder.Entity("Models.Entities.Notification.NotificationTemplateModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BodyTemplate")
                        .HasColumnType("text");

                    b.Property<string>("CcList")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long?>("EmailConfigurationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<int>("NotificationType")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<string>("SubjectTemplate")
                        .HasColumnType("text");

                    b.Property<long>("TicketTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("Trigger")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.ToTable("NotificationTemplate", "notification");
                });

            modelBuilder.Entity("Models.Entities.Org.CompanyModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.ToTable("Companies", "Org");
                });

            modelBuilder.Entity("Models.Entities.Org.CompanyScopeConfigModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("PrefixCAPA")
                        .HasColumnType("text");

                    b.Property<string>("PrefixComplaint")
                        .HasColumnType("text");

                    b.Property<string>("PrefixTicket")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId")
                        .IsUnique();

                    b.ToTable("CompanyScopeConfig", "Org");
                });

            modelBuilder.Entity("Models.Entities.Org.DepartmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKCompanyId");

                    b.ToTable("Department", "Org");
                });

            modelBuilder.Entity("Models.Entities.Setup.EmailConfigurationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccessKey")
                        .HasColumnType("text");

                    b.Property<string>("BCC")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Host")
                        .HasColumnType("text");

                    b.Property<int>("IMAPPort")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<string>("ReplyTo")
                        .HasColumnType("text");

                    b.Property<int>("SMTPPort")
                        .HasColumnType("integer");

                    b.Property<string>("SecretKey")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmailConfiguration", "setup");
                });

            modelBuilder.Entity("Models.Entities.Setup.NotificationScheduleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<long?>("FKEmailConfigurationId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKNotificationConfigId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FKTicketId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaxRetryCount")
                        .HasColumnType("integer");

                    b.Property<int>("NotificationType")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<string>("Recipient")
                        .HasColumnType("text");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ScheduledTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SentTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("FKEmailConfigurationId");

                    b.HasIndex("FKTicketId");

                    b.ToTable("NotificationSchedule", "setup");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionMapModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<int>("FKMenuActionId")
                        .HasColumnType("integer");

                    b.Property<int>("FKMenuId")
                        .HasColumnType("integer");

                    b.Property<int?>("MenuActionId")
                        .HasColumnType("integer");

                    b.Property<int?>("MenuId")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("MenuActionId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuActionMap", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("HttpVerb")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.ToTable("MenuAction", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionRoleMappingModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKMenuActionMapId")
                        .HasColumnType("bigint");

                    b.Property<int>("FKRoleId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAllowed")
                        .HasColumnType("boolean");

                    b.Property<long?>("MenuActionMapId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("MenuActionMapId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuActionRoleMapping", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("IconClass")
                        .HasColumnType("text");

                    b.Property<string>("IconViewBox")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<string>("Route")
                        .HasColumnType("text");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.RoleMenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanEdit")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanView")
                        .HasColumnType("boolean");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleMenu", "account");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("HomeUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSystemGenerated")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.HasKey("Id");

                    b.ToTable("Role", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserCompanyModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long>("FKCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCompany", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserDepartmentModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<long?>("DepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDepartment", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserRoleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(102);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(103);

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(106);

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(107);

                    b.Property<int>("FKRoleId")
                        .HasColumnType("integer");

                    b.Property<long>("FKUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("RStatus")
                        .HasColumnType("integer")
                        .HasColumnOrder(101);

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(104);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnOrder(105);

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole", "UserMgmt");
                });

            modelBuilder.Entity("Models.Entities.Audit.AuditLogModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.Issue.LeadCustomerModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Entities.Issue.ResolutionModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Entities.Issue.RootCauseModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketAttachmentModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany("Attachments")
                        .HasForeignKey("FKTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketCommentModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.TicketModel", null)
                        .WithMany("Comments")
                        .HasForeignKey("TicketModelId");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketDepartmentMapModel", b =>
                {
                    b.HasOne("Models.Entities.Org.DepartmentModel", "Department")
                        .WithMany()
                        .HasForeignKey("FKDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany("DepartmentMaps")
                        .HasForeignKey("FKTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketLeadCustomerMapModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.LeadCustomerModel", "Project")
                        .WithMany()
                        .HasForeignKey("FKLeadCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany("LeadCustomerMaps")
                        .HasForeignKey("FKTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketLinkModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany("Links")
                        .HasForeignKey("FKTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany()
                        .HasForeignKey("FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.Issue.TicketTypeModel", "TicketType")
                        .WithMany()
                        .HasForeignKey("FKTicketTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("TicketType");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketTypeModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("FKAssignedUserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketWatchListModel", b =>
                {
                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany("WatchList")
                        .HasForeignKey("FKTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("FKUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.Org.CompanyScopeConfigModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithOne("ScopeConfig")
                        .HasForeignKey("Models.Entities.Org.CompanyScopeConfigModel", "FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Entities.Org.DepartmentModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("FKCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Models.Entities.Setup.NotificationScheduleModel", b =>
                {
                    b.HasOne("Models.Entities.Setup.EmailConfigurationModel", "EmailConfiguration")
                        .WithMany("NotificationSchedules")
                        .HasForeignKey("FKEmailConfigurationId");

                    b.HasOne("Models.Entities.Issue.TicketModel", "Ticket")
                        .WithMany()
                        .HasForeignKey("FKTicketId");

                    b.Navigation("EmailConfiguration");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionMapModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.MenuActionModel", "MenuAction")
                        .WithMany("MenuActionMaps")
                        .HasForeignKey("MenuActionId");

                    b.HasOne("Models.Entities.UserManagement.MenuModel", "Menu")
                        .WithMany("MenuActionMaps")
                        .HasForeignKey("MenuId");

                    b.Navigation("Menu");

                    b.Navigation("MenuAction");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionRoleMappingModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.MenuActionMapModel", "MenuActionMap")
                        .WithMany("MenuActionRoleMappings")
                        .HasForeignKey("MenuActionMapId");

                    b.HasOne("Models.Entities.UserManagement.RoleModel", "Role")
                        .WithMany("MenuActionRoleMappings")
                        .HasForeignKey("RoleId");

                    b.Navigation("MenuActionMap");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.RoleMenuModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.MenuModel", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Entities.UserManagement.RoleModel", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserCompanyModel", b =>
                {
                    b.HasOne("Models.Entities.Org.CompanyModel", "Company")
                        .WithMany("UserCompanies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany("UserCompanies")
                        .HasForeignKey("UserId");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserDepartmentModel", b =>
                {
                    b.HasOne("Models.Entities.Org.DepartmentModel", "Department")
                        .WithMany("UserDepartments")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany("UserDepartments")
                        .HasForeignKey("UserId");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserRoleModel", b =>
                {
                    b.HasOne("Models.Entities.UserManagement.RoleModel", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("Models.Entities.UserManagement.UserModel", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Entities.Issue.TicketModel", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("DepartmentMaps");

                    b.Navigation("LeadCustomerMaps");

                    b.Navigation("Links");

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("Models.Entities.Org.CompanyModel", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("ScopeConfig");

                    b.Navigation("UserCompanies");
                });

            modelBuilder.Entity("Models.Entities.Org.DepartmentModel", b =>
                {
                    b.Navigation("UserDepartments");
                });

            modelBuilder.Entity("Models.Entities.Setup.EmailConfigurationModel", b =>
                {
                    b.Navigation("NotificationSchedules");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionMapModel", b =>
                {
                    b.Navigation("MenuActionRoleMappings");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuActionModel", b =>
                {
                    b.Navigation("MenuActionMaps");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.MenuModel", b =>
                {
                    b.Navigation("MenuActionMaps");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.RoleModel", b =>
                {
                    b.Navigation("MenuActionRoleMappings");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Models.Entities.UserManagement.UserModel", b =>
                {
                    b.Navigation("UserCompanies");

                    b.Navigation("UserDepartments");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
